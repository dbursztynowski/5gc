apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: open5gs
    meta.helm.sh/release-namespace: default
  generation: 1
  labels:
    app.kubernetes.io/component: populate
    app.kubernetes.io/instance: open5gs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: open5gs
    helm.sh/chart: open5gs-2.2.0
  name: open5gs-populate
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: populate
      app.kubernetes.io/instance: open5gs
      app.kubernetes.io/name: open5gs
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: populate
        app.kubernetes.io/instance: open5gs
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: open5gs
        helm.sh/chart: open5gs-2.2.0
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - tail -f /dev/null
        env:
        - name: DB_URI
          value: mongodb://open5gs-mongodb/open5gs
        image: docker.io/gradiant/open5gs-dbctl:0.10.3
        imagePullPolicy: IfNotPresent
        name: populate
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

